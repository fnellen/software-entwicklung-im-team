@startuml
class Benutzer{

}
class Student{
+ Long id
- String githubHandle
- Set<Urlaub> urlaube
- Set<KlausurReferenz> klausuren
+ berechneRestUrlaub()
}


Benutzer -|> Student

class KlausurReferenz{
- Long klausur_id
}

class FreistellungsAntragsDomainService{
+ belegeUrlaub(Student student, Urlaub urlaub)
+ urlaubStornieren(Student student, Urlaub urlaub)
- validiereUrlaubsBlöcke(Student student, Urlaub urlaub)
- validiereÜberschneidung(Student student, Urlaub urlaub)
+ belegeKlausur(Student student, Klausur klausur)
- klausurStornieren(Student student, Klausur klausur)
- validiereÜberschneidung(Student student, Klausur klausur)
}
class UrlaubDomainService{

}

class Urlaub{
- Zeitraum zeitraum
- validiereZeitraumUrlaub(Urlaub urlaub)
- validiereBlockLänge(Urlaub urlaub)
- validiereBlockAnfang(Urlaub urlaub)
}

class (Klausur)ApplicationService{
+ klausurRegistrieren(Klausur klausur)
}

class KlausurDomainService{

}

class Klausur{
+ LSFID id
- String name
- Zeitraum zeitraum
- Boolean präsenz
}

class Zeitraum{
- LocalDate datum
- LocalTime startUhrzeit
- LocalTime endUhrzeit
+ validiereUhrzeit()
+ validierePraktikumsZeitraum()
+ validiereWochenende()
}

class LSFID{
+ Long id
- validateID(Long id)
}

Student -> Urlaub
Student -> Klausur
package "Aggregate"{

}


@enduml